D√©marche 1 : Extraction et classification comptable via LLMs
=============================================================

Objectif
--------

Cette premi√®re d√©marche vise √† automatiser l‚Äôextraction d‚Äôinformations √† partir de factures,
puis √† effectuer leur classification comptable selon le plan comptable fran√ßais et canadien.
Le pipeline combine OCR, extraction par LLMs et classification supervis√©e.

√âtapes de la d√©marche
---------------------

1. Chargement des donn√©es
~~~~~~~~~~~~~~~~~~~~~~~~~

Les factures sont au format JSON contenant les chemins d‚Äôimage et des m√©tadonn√©es.

.. code-block:: python

    import json

    with open('factures.json', 'r', encoding='utf-8') as f:
        factures = json.load(f)

üìç **Notebook associ√©** : `1_chargement_factures.ipynb`

2. Pr√©traitement des images
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Conversion des images en niveaux de gris et r√©duction du bruit.

.. code-block:: python

    import cv2

    def preprocess_image(image_path):
        img = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
        img = cv2.GaussianBlur(img, (5, 5), 0)
        return img

üìç **Notebook associ√©** : `2_pretraitement_images.ipynb`

3. Extraction des entit√©s avec Qwen2.5
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Le mod√®le Qwen2.5 est utilis√© pour extraire les entit√©s structur√©es du texte OCR.

.. code-block:: python

    prompt = f"""
    Texte extrait : {texte_facture}
    Extrais les entit√©s suivantes : Num√©ro Facture, Date, Client, Montant HT, TVA, Total TTC.
    R√©ponse format√©e en JSON :
    """

üìç **Notebook associ√©** : `3_extraction_qwen.ipynb`

4. Classification avec LLaMA3.1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Le mod√®le LLaMA3.1 propose le compte comptable adapt√©.

.. code-block:: python

    prompt = f"""
    Voici les donn√©es extraites d'une facture :
    - Client : {client}
    - Montant HT : {montant}
    - Libell√© : {libelle}
    Propose le compte comptable (PCG) associ√© √† cette op√©ration.
    """

üìç **Notebook associ√©** : `4_classification_llama.ipynb`

5. √âvaluation des r√©sultats
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Comparaison des r√©sultats pr√©dits avec des donn√©es valid√©es manuellement.

.. code-block:: python

    from sklearn.metrics import classification_report

    print(classification_report(y_true, y_pred))

üìç **Notebook associ√©** : `5_evaluation.ipynb`

R√©f√©rentiels utilis√©s
---------------------

- ‚úÖ Plan Comptable G√©n√©ral (France)
- ‚úÖ Plan Comptable Canadien (JSON)

Structure de l‚Äôinterface utilisateur (Streamlit)
-------------------------------------------------

Une interface a √©t√© d√©velopp√©e avec **Streamlit** pour tester le pipeline complet :

- Upload de facture
- Extraction OCR et Qwen2.5
- Classification LLaMA3.1
- Affichage des entit√©s et du compte propos√©

.. code-block:: python

    import streamlit as st

    uploaded_file = st.file_uploader("Importer une facture", type=["png", "jpg", "pdf"])
    if uploaded_file:
        texte = ocr_extraction(uploaded_file)
        entites = extraction_llm_qwen(texte)
        compte = classification_llm_llama(entites)
        st.json({"Entit√©s": entites, "Compte Comptable": compte})

üìç **Fichier Streamlit associ√©** : `app_demarche1.py`

Fichiers Google Colab associ√©s
------------------------------

.. list-table:: Liens vers les notebooks Google Colab
   :header-rows: 1

   * - √âtape
     - Notebook Colab
   * - Chargement JSON
     - https://colab.research.google.com/drive/XXXXXXXXX
   * - Pr√©traitement des images
     - https://colab.research.google.com/drive/YYYYYYYYY
   * - Extraction Qwen2.5
     - https://colab.research.google.com/drive/ZZZZZZZZZ
   * - Classification LLaMA3.1
     - https://colab.research.google.com/drive/AAAAAAA
   * - √âvaluation
     - https://colab.research.google.com/drive/BBBBBBB

*(Remplace les liens par les URL r√©els de tes notebooks Colab)*

